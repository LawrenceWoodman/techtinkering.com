<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TechTinkering - Retro Computers, Programming, General Technical Tinkering</title>
  <link href="http://techtinkering.com/feed.xml" rel="self"/>
  <link href="http://techtinkering.com"/>
  <updated>2018-12-28</updated>
  <id>http://techtinkering.com/feed.xml</id>
  <generator uri="https://github.com/lawrencewoodman/tekyll">teykll</generator>
    <entry>
      <title>Advent of Code 2018: 25 Days, 25 Languages</title>
      <id>http://techtinkering.com/articles/advent-of-code-2018-25-days-25-languages/</id>
      <link href="http://techtinkering.com/articles/advent-of-code-2018-25-days-25-languages/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2018-12-01
        </published>

        <updated>
          2018-12-26
        </updated>

        <summary>There are lots of different programming challenges, but this year one in particular has caught my attention and I have decided to take part.  Advent of Code starts 1st December with daily programming p</summary>
    </entry>
    <entry>
      <title>Book Review: What the Dormouse Said by John Markoff</title>
      <id>http://techtinkering.com/2016/03/06/book-review-what-the-dormouse-said-by-john-markoff/</id>
      <link href="http://techtinkering.com/2016/03/06/book-review-what-the-dormouse-said-by-john-markoff/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2016-03-06
        </published>

        <updated>
          2016-03-06
        </updated>

        <summary>The premise of this book is that the 60s/70s counter-culture led to the personal computer revolution. I think the book demonstrated well how this influenced SAIL and how the Augment lab innovations led</summary>
    </entry>
    <entry>
      <title>How to Make Thunderbird Feel Like Geary</title>
      <id>http://techtinkering.com/2014/06/22/how-to-make-thunderbird-feel-like-geary/</id>
      <link href="http://techtinkering.com/2014/06/22/how-to-make-thunderbird-feel-like-geary/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2014-06-22
        </published>

        <updated>
          2014-06-22
        </updated>

        <summary>Geary is a lightweight email client inspired by gmail's interface.  Its simple minimalistic interface is quite pleasant to use and initially I was really pleased to switch to it from Thunderbird.  Howe</summary>
    </entry>
    <entry>
      <title>Beware of Immutable Lists for F# Parallel Processing</title>
      <id>http://techtinkering.com/2014/04/19/beware-of-immutable-lists-for-fsharp-parallel-processing/</id>
      <link href="http://techtinkering.com/2014/04/19/beware-of-immutable-lists-for-fsharp-parallel-processing/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2014-04-19
        </published>

        <updated>
          2014-04-19
        </updated>

        <summary>With F#, the list often feels like the default choice of data structure.  It is immutable and hence easy to reason about, however its use can come at a great cost.  If you are using lists to process la</summary>
    </entry>
    <entry>
      <title>Rendering Racket Package Scribblings on Github Using gh-pages</title>
      <id>http://techtinkering.com/2013/08/29/rendering-racket-package-scribblings-on-github-using-gh-pages/</id>
      <link href="http://techtinkering.com/2013/08/29/rendering-racket-package-scribblings-on-github-using-gh-pages/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-08-29
        </published>

        <updated>
          2013-08-29
        </updated>

        <summary>With the new package management system for Racket, there is a need to host documentation for the package somewhere.  Github allows you to host web pages, and hence a package's documentation, by putting</summary>
    </entry>
    <entry>
      <title>Programmable Character Sets: A Simple Alternative to Bitmap Displays</title>
      <id>http://techtinkering.com/2013/05/29/programmable-character-sets-a-simple-alternative-to-bitmap-displays/</id>
      <link href="http://techtinkering.com/2013/05/29/programmable-character-sets-a-simple-alternative-to-bitmap-displays/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-05-29
        </published>

        <updated>
          2013-05-29
        </updated>

        <summary>Programmable or reconfigurable character sets were a simple alternative to fully bitmappable displays.  The main driving force behind their creation was a desire to keep the cost of computers low: RAM </summary>
    </entry>
    <entry>
      <title>Adding a Basic Stub to a Vic-20 Assembly Language Program</title>
      <id>http://techtinkering.com/2013/05/10/adding-a-basic-stub-to-a-vic-20-assembly-language-program/</id>
      <link href="http://techtinkering.com/2013/05/10/adding-a-basic-stub-to-a-vic-20-assembly-language-program/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-05-10
        </published>

        <updated>
          2013-05-10
        </updated>

        <summary>To make machine language programs more friendly it is nice to add a basic stub which contains a line with a SYS statement to start the code.  This is easy to do on the Vic-20 and the process gives you </summary>
    </entry>
    <entry>
      <title>Creating a TTY Simulator in Assembly Language on the Vic-20</title>
      <id>http://techtinkering.com/2013/05/04/creating-a-tty-simulator-in-assembly-language-on-the-vic-20/</id>
      <link href="http://techtinkering.com/2013/05/04/creating-a-tty-simulator-in-assembly-language-on-the-vic-20/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-05-04
        </published>

        <updated>
          2013-05-04
        </updated>

        <summary>The Vicmon machine language cartridge is an excellent tool for exploring the Vic-20.  This article and its associated video will show you how to use it to create a simple program that will change the n</summary>
    </entry>
    <entry>
      <title>BBS Ads: Getting the Word Out</title>
      <id>http://techtinkering.com/2013/04/23/bbs-ads-getting-the-word-out/</id>
      <link href="http://techtinkering.com/2013/04/23/bbs-ads-getting-the-word-out/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-04-23
        </published>

        <updated>
          2013-04-23
        </updated>

        <summary>BBS Ads were important to users and sysops of BBS's.  There wasn't any universal directory like the phone book, and during the heyday of BBS's (early '80s to the mid '90s), most people couldn't easily </summary>
    </entry>
    <entry>
      <title>Beginning Assembly Programming on the Commodore Vic-20</title>
      <id>http://techtinkering.com/2013/04/16/beginning-assembly-programming-on-the-commodore-vic-20/</id>
      <link href="http://techtinkering.com/2013/04/16/beginning-assembly-programming-on-the-commodore-vic-20/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-04-16
        </published>

        <updated>
          2013-04-16
        </updated>

        <summary>The Commodore Vic-20 is a great machine to learn an assembly language on.  It was released in 1981 and was the first computer to sell one million units, which contributes to its popularity today.  The </summary>
    </entry>
    <entry>
      <title>Using C-Kermit to Exchange Files With Telnet BBS's</title>
      <id>http://techtinkering.com/2013/04/09/using-c-kermit-to-exchange-files-with-telnet-bbs-s/</id>
      <link href="http://techtinkering.com/2013/04/09/using-c-kermit-to-exchange-files-with-telnet-bbs-s/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-04-09
        </published>

        <updated>
          2013-04-09
        </updated>

        <summary>Most BBSs that are still running now do so via telnet.  In many ways this is great as it allows people from all around the world to access a BBS as if it were local to them.  The problem comes though, </summary>
    </entry>
    <entry>
      <title>Connecting to a Remote Serial Port over TCP/IP</title>
      <id>http://techtinkering.com/2013/04/02/connecting-to-a-remote-serial-port-over-tcpip/</id>
      <link href="http://techtinkering.com/2013/04/02/connecting-to-a-remote-serial-port-over-tcpip/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-04-02
        </published>

        <updated>
          2013-04-02
        </updated>

        <summary>Most modern machines don't have a serial port as standard; you could use a USB to serial lead, however, if you have another machine available that does have a serial port you can access it remotely ove</summary>
    </entry>
    <entry>
      <title>Using Netcat to Create ad hoc Links Between Applications or Machines</title>
      <id>http://techtinkering.com/2013/03/25/using-netcat-to-create-ad-hoc-links-between-applications-and-machines/</id>
      <link href="http://techtinkering.com/2013/03/25/using-netcat-to-create-ad-hoc-links-between-applications-and-machines/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-03-25
        </published>

        <updated>
          2013-03-25
        </updated>

        <summary>Netcat is a simple Unix utility which reads and writes data across network connections using the TCP or UDP protocol.  It is often described as the &quot;Swiss-army knife for TCP/IP&quot; because of it</summary>
    </entry>
    <entry>
      <title>If Only Borland Had Stuck With Turbo Modula-2 For CP/M</title>
      <id>http://techtinkering.com/2013/03/12/if-only-borland-had-stuck-with-turbo-modula-2-for-cpm/</id>
      <link href="http://techtinkering.com/2013/03/12/if-only-borland-had-stuck-with-turbo-modula-2-for-cpm/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-03-12
        </published>

        <updated>
          2013-03-12
        </updated>

        <summary>I have written previously about why Turbo Pascal is a Great Choice For Programming Under CP/M and now it is time to talk about what could have been.  You probably haven't heard of Turbo Modula-2 for CP</summary>
    </entry>
    <entry>
      <title>Turbo Pascal: A Great Choice For Programming Under CP/M</title>
      <id>http://techtinkering.com/2013/03/05/turbo-pascal-a-great-choice-for-programming-under-cpm/</id>
      <link href="http://techtinkering.com/2013/03/05/turbo-pascal-a-great-choice-for-programming-under-cpm/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-03-05
        </published>

        <updated>
          2013-03-05
        </updated>

        <summary>CP/M was blessed with many programming languages, each with their own strengths and weaknesses.  I think that Turbo Pascal stands out from these and I'm not alone.  When Turbo Pascal was released in 19</summary>
    </entry>
    <entry>
      <title>xdgbasedir: A Tcl Module to Access the XDG Base Directory Specification</title>
      <id>http://techtinkering.com/2013/02/27/xdgbasedir-a-tcl-module-to-access-the-xdg-base-directory-specification/</id>
      <link href="http://techtinkering.com/2013/02/27/xdgbasedir-a-tcl-module-to-access-the-xdg-base-directory-specification/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-02-27
        </published>

        <updated>
          2013-02-27
        </updated>

        <summary>Unix has traditionally lacked a consistent way of storing user specific and system wide configuration and support files.  This has lead to a mess of dot files in a user's home directory and other assoc</summary>
    </entry>
    <entry>
      <title>Compiling a Tcl Script into an Executable</title>
      <id>http://techtinkering.com/2013/02/20/compiling-a-tcl-script-into-an-executable/</id>
      <link href="http://techtinkering.com/2013/02/20/compiling-a-tcl-script-into-an-executable/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-02-20
        </published>

        <updated>
          2013-02-20
        </updated>

        <summary>Locating Tcl scripts to load from an executable can be awkward if you want to make your program cross-platform.  An easier way is to compile a Tcl script directly into the executable and let that scrip</summary>
    </entry>
    <entry>
      <title>Floppy Days: A New Vintage Computing Podcast</title>
      <id>http://techtinkering.com/2013/02/19/floppy-days-a-new-vintage-computing-podcast/</id>
      <link href="http://techtinkering.com/2013/02/19/floppy-days-a-new-vintage-computing-podcast/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-02-19
        </published>

        <updated>
          2013-02-19
        </updated>

        <summary>I have just finished listening to the first episode of Floppy Days and I'm pleased to report that it looks like this is going to be a good addition to the vintage computing landscape.  The presenter, R</summary>
    </entry>
    <entry>
      <title>Using Dynamically Generated Header Files with CMake</title>
      <id>http://techtinkering.com/2013/02/12/using-dynamically-generated-header-files-with-cmake/</id>
      <link href="http://techtinkering.com/2013/02/12/using-dynamically-generated-header-files-with-cmake/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2013-02-12
        </published>

        <updated>
          2013-02-12
        </updated>

        <summary>Sometimes it can be useful to dynamically generate header files and include them from a C source file.  However, it can be a little difficult getting CMake to recognize when to generate the files and w</summary>
    </entry>
    <entry>
      <title>Embedding an SDL Surface in a Tk Window</title>
      <id>http://techtinkering.com/2012/06/26/embedding-an-sdl-surface-in-a-tk-window/</id>
      <link href="http://techtinkering.com/2012/06/26/embedding-an-sdl-surface-in-a-tk-window/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2012-06-26
        </published>

        <updated>
          2012-12-02
        </updated>

        <summary>Tk is great, but sometimes it just isn't fast enough.  SDL is fast, but has no support for input dialogs and other GUI conventions.  By embedding an SDL surface in a Tk window you get the best of both </summary>
    </entry>
    <entry>
      <title>Refactoring: Arm Yourself in the War Against Useless Comments</title>
      <id>http://techtinkering.com/2012/04/26/refactoring-arm-yourself-in-the-war-against-useless-comments/</id>
      <link href="http://techtinkering.com/2012/04/26/refactoring-arm-yourself-in-the-war-against-useless-comments/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2012-04-26
        </published>

        <updated>
          2012-04-26
        </updated>

        <summary>Comments, comments, everywhere, but are they making your code clearer or just distracting you?  Comments are meant to be there to explain code and help you to understand it.  However, they are often ou</summary>
    </entry>
    <entry>
      <title>Dealing Sympathetically with Legacy Code</title>
      <id>http://techtinkering.com/2012/04/20/dealing-sympathetically-with-legacy-code/</id>
      <link href="http://techtinkering.com/2012/04/20/dealing-sympathetically-with-legacy-code/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2012-04-20
        </published>

        <updated>
          2012-04-20
        </updated>

        <summary>I have often noticed programmers getting worked up about the legacy code they are maintaining.  I know it is annoying having to wade through poor code, or
worrying about making changes for fear of unex</summary>
    </entry>
    <entry>
      <title>Pisceans and October Babies More Likely to Become Poets.  Scraping Wikipedia Reveals All</title>
      <id>http://techtinkering.com/2011/09/08/pisceans-and-october-babies-more-likely-to-become-poets/</id>
      <link href="http://techtinkering.com/2011/09/08/pisceans-and-october-babies-more-likely-to-become-poets/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2011-09-08
        </published>

        <updated>
          2011-09-08
        </updated>

        <summary>This is the second in a series of articles looking into whether when you were born affects your future.  In the previous article I looked at Nobel laureates, which are, of course, from a range of field</summary>
    </entry>
    <entry>
      <title>Does When You Were Born Affect Your Chance of Becoming a Nobel Laureate? Scraping Wikipedia to Find Out</title>
      <id>http://techtinkering.com/2011/08/24/does-when-you-were-born-affect-your-chance-of-becoming-a-nobel-laureate/</id>
      <link href="http://techtinkering.com/2011/08/24/does-when-you-were-born-affect-your-chance-of-becoming-a-nobel-laureate/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2011-08-24
        </published>

        <updated>
          2011-08-24
        </updated>

        <summary>There has been a lot of talk in the UK recently about whether when you were born affects your schooling.  Lots of teachers have noticed how pupils born at the end of the Summer often struggle compared </summary>
    </entry>
    <entry>
      <title>Improving the related_posts feature of jekyll</title>
      <id>http://techtinkering.com/2011/08/17/improving-related-posts-on-jekyll/</id>
      <link href="http://techtinkering.com/2011/08/17/improving-related-posts-on-jekyll/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2011-08-17
        </published>

        <updated>
          2011-08-17
        </updated>

        <summary>Now that I have converted TechTinkering over to Jekyll, I have come up against a bit of a problem with site.related_posts: The results are always just the latest posts, and are not filtered or ordered </summary>
    </entry>
    <entry>
      <title>Mida - A Microdata parser/extractor library for Ruby</title>
      <id>http://techtinkering.com/2011/04/16/mida-a-microdata-parser-extractor-library-for-ruby/</id>
      <link href="http://techtinkering.com/2011/04/16/mida-a-microdata-parser-extractor-library-for-ruby/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2011-04-16
        </published>

        <updated>
          2011-04-16
        </updated>

        <summary>I have recently released Mida as a Gem for parsing/extracting Microdata from web pages.  Not many sites at the moment are using Microdata, in fact, apart from this site, I only know of one other: Trust</summary>
    </entry>
    <entry>
      <title>A Jekyll Plugin to Display Ratings as Star Images</title>
      <id>http://techtinkering.com/2011/02/15/a-jekyll-plugin-to-display-ratings-as-star-images/</id>
      <link href="http://techtinkering.com/2011/02/15/a-jekyll-plugin-to-display-ratings-as-star-images/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2011-02-15
        </published>

        <updated>
          2011-02-15
        </updated>

        <summary>I have been using Jekyll a lot recently on the Trust a Friend website and found the need to display a rating as a series of stars.  Initially I implemented this in JavaScript, which worked fine, but I </summary>
    </entry>
    <entry>
      <title>The National Museum of Computing at Bletchley Park</title>
      <id>http://techtinkering.com/2010/06/15/the-national-museum-of-computing-at-bletchley-park/</id>
      <link href="http://techtinkering.com/2010/06/15/the-national-museum-of-computing-at-bletchley-park/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2010-06-15
        </published>

        <updated>
          2010-06-15
        </updated>

        <summary>The National Museum of Computing is the UK's largest museum dedicated to computing.  It is located on the Bletchley Park estate just south of Milton Keynes and is easy to get to by car, bus or train.  </summary>
    </entry>
    <entry>
      <title>xAce is Back in Active Development and Looking For Contributors</title>
      <id>http://techtinkering.com/2010/05/06/xace-is-back-in-active-development-and-looking-for-contributors/</id>
      <link href="http://techtinkering.com/2010/05/06/xace-is-back-in-active-development-and-looking-for-contributors/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2010-05-06
        </published>

        <updated>
          2010-05-06
        </updated>

        <summary>xAce is a great Jupiter Ace emulator and is in fact the one that I use the most, however it hasn't been actively developed since 1997 and therefore has some shortcomings.  I am keen to improve the emul</summary>
    </entry>
    <entry>
      <title>Introducing TextPix v0.1 - A program to convert an image into a character set and text mode screen data</title>
      <id>http://techtinkering.com/2010/04/16/introducing-textpix-v0-1/</id>
      <link href="http://techtinkering.com/2010/04/16/introducing-textpix-v0-1/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2010-04-16
        </published>

        <updated>
          2010-04-16
        </updated>

        <summary>I have today released TextPix v0.1  This is a program to take an image and convert it into a redefined character set and the associated text mode screen data referencing that character set.
The program</summary>
    </entry>
    <entry>
      <title>Getting Colour ANSI Emulation to Work Properly When Connecting to a BBS With Telnet Under Linux</title>
      <id>http://techtinkering.com/2010/02/14/getting-colour-ansi-emulation-to-work-properly-when-connecting-to-a-bbs-with-telnet-under-linux/</id>
      <link href="http://techtinkering.com/2010/02/14/getting-colour-ansi-emulation-to-work-properly-when-connecting-to-a-bbs-with-telnet-under-linux/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2010-02-14
        </published>

        <updated>
          2010-02-14
        </updated>

        <summary>I have noticed that the number of people interested in using telnet to access BBSs seems to be growing, which I'm really pleased to see.  However lots of people seem to be having trouble getting colour</summary>
    </entry>
    <entry>
      <title>Setting up a Beowulf Cluster Using Open MPI on Linux</title>
      <id>http://techtinkering.com/2009/12/02/setting-up-a-beowulf-cluster-using-open-mpi-on-linux/</id>
      <link href="http://techtinkering.com/2009/12/02/setting-up-a-beowulf-cluster-using-open-mpi-on-linux/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-12-02
        </published>

        <updated>
          2009-12-02
        </updated>

        <summary>I have been doing a lot of work recently on Linear Genetic Programming.  This requires a great deal of processing power and to meet this I have been using Open MPI to create a Linux cluster.   What fol</summary>
    </entry>
    <entry>
      <title>My Top 10 Classic Text Mode BSD Games</title>
      <id>http://techtinkering.com/2009/08/11/my-top-10-classic-text-mode-bsd-games/</id>
      <link href="http://techtinkering.com/2009/08/11/my-top-10-classic-text-mode-bsd-games/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-08-11
        </published>

        <updated>
          2009-08-11
        </updated>

        <summary>Recently, I have been playing a collection of text mode games that were commonly found on Unix Systems during the 70s and 80s.  These games are surprisingly playable and, for me, they really show that </summary>
    </entry>
    <entry>
      <title>Running 4K FORTRAN on a DEC PDP-8</title>
      <id>http://techtinkering.com/2009/07/14/running-4k-fortran-on-a-dec-pdp8/</id>
      <link href="http://techtinkering.com/2009/07/14/running-4k-fortran-on-a-dec-pdp8/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-07-14
        </published>

        <updated>
          2009-07-14
        </updated>

        <summary>4K FORTRAN was a subset of FORTRAN II and was the first high-level language available for the DEC PDP-8.  It consisted of two parts: the 4K FORTRAN Compiler (nicknamed &quot;Fivetran&quot;) and the 4K </summary>
    </entry>
    <entry>
      <title>A Quickstart Guide to Editing Paper Tape With the Symbolic Tape Editor on the DEC PDP-8</title>
      <id>http://techtinkering.com/2009/06/16/a-quickstart-guide-to-editing-paper-tape-with-the-symbolic-tape-editor-on-the-dec-pdp-8/</id>
      <link href="http://techtinkering.com/2009/06/16/a-quickstart-guide-to-editing-paper-tape-with-the-symbolic-tape-editor-on-the-dec-pdp-8/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-06-16
        </published>

        <updated>
          2009-06-16
        </updated>

        <summary>Before re-writable storage devices, such as tape drives, become popular for the DEC PDP-8, owners had to rely on paper tape.  This was fine for loading programs on pre-punched tape, but left the proble</summary>
    </entry>
    <entry>
      <title>Book Review: Electronic Brains: Stories from the Dawn of the Computer Age by Mike Hally</title>
      <id>http://techtinkering.com/2009/06/03/book-review-electronic-brains-stories-from-the-dawn-of-the-computer-age-by-mike-hally/</id>
      <link href="http://techtinkering.com/2009/06/03/book-review-electronic-brains-stories-from-the-dawn-of-the-computer-age-by-mike-hally/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-06-03
        </published>

        <updated>
          2009-06-03
        </updated>

        <summary>This is an interesting history of computer development around the world during the 1940s and 50s.  The book grew out of a radio series on BBS Radio 4 and contains lots of original material gained from </summary>
    </entry>
    <entry>
      <title>Emulating a DEC PDP-8 with SimH</title>
      <id>http://techtinkering.com/2009/05/26/emulating-a-dec-pdp8-with-simh/</id>
      <link href="http://techtinkering.com/2009/05/26/emulating-a-dec-pdp8-with-simh/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-05-26
        </published>

        <updated>
          2009-05-26
        </updated>

        <summary>The DEC PDP-8 mini-computer was launched on 22 March 1965 and was a great success.  It was fairly cheap for the day and could easily be expanded.  What attracts me most to the PDP-8 is its simple desig</summary>
    </entry>
    <entry>
      <title>Improving the Standard SUBLEQ OISC (One Instruction Set Computer) Architecture</title>
      <id>http://techtinkering.com/2009/05/15/improving-the-standard-subleq-oisc-architecture/</id>
      <link href="http://techtinkering.com/2009/05/15/improving-the-standard-subleq-oisc-architecture/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-05-15
        </published>

        <updated>
          2009-05-15
        </updated>

        <summary>When I first came across The SUBLEQ URISC (Ultimate RISC) / OISC (One Instruction Set Computer) Architecture,
I really liked the beauty and simplicity of the design.  However, I have now been experimen</summary>
    </entry>
    <entry>
      <title>Connecting a Parallel Printer to a Modern Linux Machine Using a LogiLink USB to Parallel Cable, D-SUB 25pin</title>
      <id>http://techtinkering.com/2009/05/06/connecting-a-parallel-printer-to-a-modern-linux-machine-using-a-logilink-usb-to-parallel-cable/</id>
      <link href="http://techtinkering.com/2009/05/06/connecting-a-parallel-printer-to-a-modern-linux-machine-using-a-logilink-usb-to-parallel-cable/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-05-06
        </published>

        <updated>
          2009-05-06
        </updated>

        <summary>I have a number of older printers that I would like to connect to my modern machine, but have been unable to do so because my computer doesn't have a parallel interface.  After searching the internet f</summary>
    </entry>
    <entry>
      <title>An Introduction to Corewar</title>
      <id>http://techtinkering.com/2009/04/30/an-introduction-to-corewar/</id>
      <link href="http://techtinkering.com/2009/04/30/an-introduction-to-corewar/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-04-30
        </published>

        <updated>
          2009-04-30
        </updated>

        <summary>I remember reading about Corewar roughly 20 years ago and thinking that I will have to have a go at that when I get the time.  As often happens in life, things got in the way and I only recently manage</summary>
    </entry>
    <entry>
      <title>The Smallest Communication Program in the World?</title>
      <id>http://techtinkering.com/2009/04/23/the-smallest-communication-program-in-the-world/</id>
      <link href="http://techtinkering.com/2009/04/23/the-smallest-communication-program-in-the-world/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-04-23
        </published>

        <updated>
          2009-04-23
        </updated>

        <summary>I was going through a backup of my dos machine, taken in 1998, and came across some source code which I haven't seen for a long time.  It was great to see that old code, and I must set-up a machine so </summary>
    </entry>
    <entry>
      <title>Hello, World! in SUBLEQ Assembly</title>
      <id>http://techtinkering.com/2009/03/29/hello-world-in-subleq-assembly/</id>
      <link href="http://techtinkering.com/2009/03/29/hello-world-in-subleq-assembly/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-03-29
        </published>

        <updated>
          2009-03-29
        </updated>

        <summary>After writing a previous article: The SUBLEQ URISC (Ultimate RISC) / OISC (One Instruction Set Computer) Architecture.  I was left thinking that I should really have given at least a &quot;hello, world</summary>
    </entry>
    <entry>
      <title>An Introduction to Test-Driven Development</title>
      <id>http://techtinkering.com/2009/03/18/an-introduction-to-test-driven-development/</id>
      <link href="http://techtinkering.com/2009/03/18/an-introduction-to-test-driven-development/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-03-18
        </published>

        <updated>
          2009-03-18
        </updated>

        <summary>For the past 6 months I have been using Test-Driven Development (TDD) on a new project.  It has made such a difference to the quality of my code, that I feel I just have to share it's benefits with tho</summary>
    </entry>
    <entry>
      <title>The SUBLEQ URISC (Ultimate RISC) / OISC (One Instruction Set Computer) Architecture</title>
      <id>http://techtinkering.com/2009/03/05/the-subleq-urisc-oisc-architecture/</id>
      <link href="http://techtinkering.com/2009/03/05/the-subleq-urisc-oisc-architecture/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-03-05
        </published>

        <updated>
          2009-03-05
        </updated>

        <summary>I have been interested in the limits of RISC (Reduced Instruction Set Computer) architecture for a while and recently came across OISC (One Instruction Set Computer) &#92; URISC (Ultimate RISC) archite</summary>
    </entry>
    <entry>
      <title>xAce - A Jupiter Ace Emulator for Unix (Patched to correct garbled display)</title>
      <id>http://techtinkering.com/2009/02/12/xace-a-jupiter-ace-emulator-for-unix-patched-to-correct-garbled-display/</id>
      <link href="http://techtinkering.com/2009/02/12/xace-a-jupiter-ace-emulator-for-unix-patched-to-correct-garbled-display/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-02-12
        </published>

        <updated>
          2009-02-12
        </updated>

        <summary>The only Jupiter Ace emulator that I found, which would work under Linux, was written by Edward Patel and is called xace.  There is also a Windows version available, but I don't know anything more abou</summary>
    </entry>
    <entry>
      <title>Book Review: The Mythical Man-Month: Essays on Software Engineering by Frederick P. Brooks, Jr.</title>
      <id>http://techtinkering.com/2009/01/26/book-review-the-mythical-man-month-essays-on-software-engineering-by-frederick-p-brooks-jr/</id>
      <link href="http://techtinkering.com/2009/01/26/book-review-the-mythical-man-month-essays-on-software-engineering-by-frederick-p-brooks-jr/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2009-01-26
        </published>

        <updated>
          2009-01-26
        </updated>

        <summary>This book, written in 1975, offers a fascinating insight into the software engineering process used at that time.  The author draws from his experience as project manager for the IBM System/360 and OS/</summary>
    </entry>
    <entry>
      <title>Bouncing Babies</title>
      <id>http://techtinkering.com/2008/12/16/bouncing-babies/</id>
      <link href="http://techtinkering.com/2008/12/16/bouncing-babies/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-12-16
        </published>

        <updated>
          2008-12-16
        </updated>

        <summary>Bouncing Babies is one of the first games I remember playing on an IBM PC Compatible.  I recall looking at this funny game and thinking that it really was a strange concept.  It was released as Sharewa</summary>
    </entry>
    <entry>
      <title>Chinese Man Spotted On Tissue</title>
      <id>http://techtinkering.com/2008/12/08/chinese-man-spotted-on-tissue/</id>
      <link href="http://techtinkering.com/2008/12/08/chinese-man-spotted-on-tissue/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-12-08
        </published>

        <updated>
          2008-12-08
        </updated>

        <summary>It really is funny the things that we spot sometimes.  Most of us must have looked up at the clouds and spotted animals, houses and other imagined objects.  We are also used to the occasional news repo</summary>
    </entry>
    <entry>
      <title>My Top 10 Commodore 64 Demos</title>
      <id>http://techtinkering.com/2008/11/24/my-top-10-commodore-64-demos/</id>
      <link href="http://techtinkering.com/2008/11/24/my-top-10-commodore-64-demos/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-11-24
        </published>

        <updated>
          2008-11-24
        </updated>

        <summary>There are so many great demos for the Commodore 64 and the demo scene is still thriving.  Surprisingly there are even new effects being created for this machine.  I have spent many hours going through </summary>
    </entry>
    <entry>
      <title>Beneath a Steel Sky, My Favourite Graphical Adventure Game</title>
      <id>http://techtinkering.com/2008/11/13/beneath-a-steel-sky-my-favourite-graphical-adventure-game/</id>
      <link href="http://techtinkering.com/2008/11/13/beneath-a-steel-sky-my-favourite-graphical-adventure-game/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-11-13
        </published>

        <updated>
          2008-11-13
        </updated>

        <summary>Beneath a Steel Sky was released for the PC in 1994 by Revolution Software.  It was received well and has gone on to be considered a cult classic.  It uses the Virtual Theatre engine which was first us</summary>
    </entry>
    <entry>
      <title>How to File Good Bug Reports</title>
      <id>http://techtinkering.com/2008/11/12/how-to-file-good-bug-reports/</id>
      <link href="http://techtinkering.com/2008/11/12/how-to-file-good-bug-reports/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-11-12
        </published>

        <updated>
          2008-11-12
        </updated>

        <summary>The real advantage of Open Source software is that many people from all around the globe can work to make it better.  This means that bugs can be detected and often fixed much more quickly than with cl</summary>
    </entry>
    <entry>
      <title>Using ScummVM to Play Classic Adventure Games</title>
      <id>http://techtinkering.com/2008/11/10/using-scummvm-to-play-classic-adventure-games/</id>
      <link href="http://techtinkering.com/2008/11/10/using-scummvm-to-play-classic-adventure-games/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-11-10
        </published>

        <updated>
          2008-11-10
        </updated>

        <summary>ScummVM is Virtual Machine, that allows you to run adventure games created for a number of game creation engines.  This is a great way of playing those classic adventure games that you loved so much, o</summary>
    </entry>
    <entry>
      <title>Writing my First Program to Toggle in to the IMSAI 8080</title>
      <id>http://techtinkering.com/2008/11/05/writing-my-first-program-to-toggle-in-to-the-imsai-8080/</id>
      <link href="http://techtinkering.com/2008/11/05/writing-my-first-program-to-toggle-in-to-the-imsai-8080/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-11-05
        </published>

        <updated>
          2008-11-05
        </updated>

        <summary>I have long been fascinated with entering programs into computers by methods not involving a standard keyboard and monitor.  This interest was peeked by my last article: Using the latest z80pack, versi</summary>
    </entry>
    <entry>
      <title>Using the latest  z80pack, version 1.17, to emulate an Altair 8800 or IMSAI 8080 using the new graphical FrontPanel</title>
      <id>http://techtinkering.com/2008/10/29/using-the-latest-z80pack-version-1-17-to-emulate-an-altair-8800-or-imsai-8080-using-the-new-graphical-frontpanel/</id>
      <link href="http://techtinkering.com/2008/10/29/using-the-latest-z80pack-version-1-17-to-emulate-an-altair-8800-or-imsai-8080-using-the-new-graphical-frontpanel/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-29
        </published>

        <updated>
          2008-10-29
        </updated>

        <summary>Udo Munk has just released the latest version of his z80pack emulator, version 1.17, which now includes John Kichury's FrontPanel library.  As well as being a superb emulator to run CP/M on, it now giv</summary>
    </entry>
    <entry>
      <title>Is this steamer really not to be used by girls?</title>
      <id>http://techtinkering.com/2008/10/28/is-this-steamer-really-not-to-be-used-by-girls/</id>
      <link href="http://techtinkering.com/2008/10/28/is-this-steamer-really-not-to-be-used-by-girls/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-28
        </published>

        <updated>
          2008-10-28
        </updated>

        <summary>I was preparing the walls of our nursery on the weekend, ready for the arrival of our first child in December.  I was about to start steaming off the border and thought I'd better look at the instructi</summary>
    </entry>
    <entry>
      <title>Using DOSBox to Run DOS Games and Applications</title>
      <id>http://techtinkering.com/2008/10/24/using-dosbox-to-run-dos-games-and-applications/</id>
      <link href="http://techtinkering.com/2008/10/24/using-dosbox-to-run-dos-games-and-applications/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-24
        </published>

        <updated>
          2008-10-24
        </updated>

        <summary>There were some brilliant games and applications released for DOS, and some of the games such as Command and Conquer are still very playable.  There are a number of options to play these games today, f</summary>
    </entry>
    <entry>
      <title>Installing the HI-TECH Z80 C Compiler for CP/M</title>
      <id>http://techtinkering.com/2008/10/22/installing-the-hi-tech-z80-c-compiler-for-cpm/</id>
      <link href="http://techtinkering.com/2008/10/22/installing-the-hi-tech-z80-c-compiler-for-cpm/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-22
        </published>

        <updated>
          2008-10-22
        </updated>

        <summary>My language of choice is C and I am currently getting more involved with the CP/M operating system.  I have therefore decided that it would be nice to have a C compiler working under CP/M.  There are a</summary>
    </entry>
    <entry>
      <title>Installing ZDE 1.6, a programmers editor for CP/M</title>
      <id>http://techtinkering.com/2008/10/21/installing-zde-1-6-a-programmers-editor-for-cpm/</id>
      <link href="http://techtinkering.com/2008/10/21/installing-zde-1-6-a-programmers-editor-for-cpm/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-21
        </published>

        <updated>
          2008-10-21
        </updated>

        <summary>To do any serious programming under CP/M, the first thing you need is a good programmers editor.  There aren't many in the archives, but I have tried most of them and found ZDE to be the best.  It is s</summary>
    </entry>
    <entry>
      <title>Setting up z80pack to Create an Emulated CP/M System</title>
      <id>http://techtinkering.com/2008/10/17/setting-up-z80pack-to-create-an-emulated-cpm-system/</id>
      <link href="http://techtinkering.com/2008/10/17/setting-up-z80pack-to-create-an-emulated-cpm-system/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-17
        </published>

        <updated>
          2008-10-17
        </updated>

        <summary>I have decided to try out some old CP/M software, but need something to run it on.  I could either do this on my Commodore 128 or through emulation.  Unfortunately the 1571 disk drive for my Commodore </summary>
    </entry>
    <entry>
      <title>PDP-8 in 'Three Days of the Condor'</title>
      <id>http://techtinkering.com/2008/10/14/pdp-8-in-three-days-of-the-condor/</id>
      <link href="http://techtinkering.com/2008/10/14/pdp-8-in-three-days-of-the-condor/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-14
        </published>

        <updated>
          2008-10-14
        </updated>

        <summary>I watched 'Three Days of the Condor' the other night and loved seeing what I believe is a Dec PDP 8/E being used.  Also featured in connection with this machine was a DecWriter, paper tape reader and p</summary>
    </entry>
    <entry>
      <title>Book Review: Fundamentals of Operating Systems by A.M. Lister - Second Edition</title>
      <id>http://techtinkering.com/2008/10/07/book-review-fundamentals-of-operating-systems-by-a-m-lister/</id>
      <link href="http://techtinkering.com/2008/10/07/book-review-fundamentals-of-operating-systems-by-a-m-lister/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-10-07
        </published>

        <updated>
          2008-10-07
        </updated>

        <summary>It was fascinating to read this book from 1979 and see how operating system design was viewed then, compared to now.  The biggest change being the shift in importance from batch processing to the inter</summary>
    </entry>
    <entry>
      <title>How to share an SSL certificate and still use cookies</title>
      <id>http://techtinkering.com/2008/09/16/how-to-share-an-ssl-certificate-and-still-use-cookies/</id>
      <link href="http://techtinkering.com/2008/09/16/how-to-share-an-ssl-certificate-and-still-use-cookies/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-09-16
        </published>

        <updated>
          2008-09-16
        </updated>

        <summary>Website hosting companies often provide a shared SSL certificate, but this presents the web designer with the problem of how to use it for a site that uses cookies.  I have read many people say that th</summary>
    </entry>
    <entry>
      <title>Is Cobol Really Understandable After 14 Years?</title>
      <id>http://techtinkering.com/2008/08/08/is-cobol-really-understandable-after-14-years/</id>
      <link href="http://techtinkering.com/2008/08/08/is-cobol-really-understandable-after-14-years/"/>
        <author>
          <name>Lawrence Woodman</name>
          <uri>https://lawrencewoodman.github.io</uri>
        </author>
        <published>
          2008-08-08
        </published>

        <updated>
          2008-08-08
        </updated>

        <summary>COBOL has been in the news quite a lot recently and I have been reading that there are still huge amounts of COBOL code running and being written.  This led me to wonder why this language was still bei</summary>
    </entry>
</feed>
